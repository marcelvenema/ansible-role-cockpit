---
#########################################################
## Cockpit install action                              ##
#########################################################

# Gather installed packages
- name: Gather facts about installed packages...
  ansible.builtin.package_facts:
    manager: auto

# Set action_parameters variable to pameter list in actions where key is equal to action
- name: Gather parameters for the specified action ({{ action }})
  ansible.builtin.set_fact:
    action_parameters: "{{ (actions | map('dict2items') | map('first') | selectattr('key', 'equalto', action) | map(attribute='value') | first).parameters | default({})
      }}"

# Check if cockpit service is running
- name: Check the status of the Cockpit service...
  ansible.builtin.systemd_service:
    name: cockpit.socket
  register: cockpit_service_status
  changed_when: false
  failed_when: false
  ignore_errors: true

#########################################################
## Uninstall                                           ##
#########################################################

# Run uninstall if service is running
- name: Uninstall Cockpit service...
  ansible.builtin.include_tasks: uninstall.yml
  when:
    - ansible_facts.packages.cockpit is defined
    - uninstall | default(false)

#########################################################
## Pre-installation                                    ##
#########################################################

# Install cockpit packages
- name: Install Cockpit packages...
  become: true
  ansible.builtin.package:
    name: "{{ cockpit_vars.rpm_packages }}"
    state: present

#########################################################
## Installation                                        ##
#########################################################

# Check if Podman is installed
- name: Verify if Podman is installed...
  ansible.builtin.command: podman --version
  register: podman_version_output
  changed_when: false
  failed_when: false
  ignore_errors: true

# Install Cockpit Podman packages
- name: Install Cockpit Podman packages...
  become: true
  ansible.builtin.package:
    name:
      - cockpit-podman
    state: present
  when: ansible_facts.packages.podman is defined

# Install Cockpit KVM packages
- name: Install Cockpit KVM packages...
  become: true
  ansible.builtin.package:
    name:
      - cockpit-machines
    state: present
  when: ansible_virtualization_role != 'guest'

# Install Cockpit Files packages
- name: Install Cockpit Files packages...
  become: true
  ansible.builtin.package:
    name:
      - cockpit-files
    state: present
  when: ansible_facts.packages.podman is defined

# Install Cockpit Storage packages
- name: Install Cockpit Storage packages...
  become: true
  ansible.builtin.package:
    name:
      - cockpit-storaged
    state: present
  when: ansible_facts.packages.podman is defined

# Enable Cockpit service
- name: Enable and start the Cockpit service...
  become: true
  ansible.builtin.systemd_service:
    name: cockpit.socket
    state: started
    enabled: true
  notify: Restart cockpit

# Enable Cockpit firewall
- name: Allow Cockpit service through the firewall...
  become: true
  ansible.posix.firewalld:
    service: cockpit
    permanent: true
    state: enabled
  when: '"firewalld" in ansible_facts.packages'

# Restart firewalld
- name: Restart firewall service (if needed)...
  become: true
  ansible.builtin.systemd_service:
    name: firewalld
    state: reloaded
  when:
    - cockpit_vars.manage_firewalld | default(true)
    - '"firewalld" in ansible_facts.packages'

#########################################################
## Configuration                                       ##
#########################################################

# Configure Cockpit
- name: Include Cockpit configuration tasks...
  ansible.builtin.include_tasks: configure.yml
  vars:
    action: configure

#########################################################
## Post-install                                        ##
#########################################################

# Unset variables
- name: Unset variables...
  ansible.builtin.set_fact:
    cockpit_service_status:
    podman_version_output:
